package hust.soict.hedspi.aims.order;
import hust.soict.hedspi.aims.media.DigitalVideoDisc;
import hust.soict.hedspi.aims.utils.MyDate;

public class Order {
	public static final int MAX_NUMBERS_ORDERED = 5;
	private static int nbOrders = 0;
	private int qtyOrdered;
	private MyDate dateOrdered = new MyDate();
	public int getQtyOrdered() {
		return qtyOrdered;
	}

	public void setQtyOrdered(int qtyOrdered) {
		this.qtyOrdered = qtyOrdered;
	}

	public void removeDigitalVideoDisc(DigitalVideoDisc disc) {

		boolean flag = false;
		for (int i = 0; i < qtyOrdered; i++) {
			if (disc == itemsOrdered[i]) {
				for (int j = i + 1; j < qtyOrdered; j++) {
					itemsOrdered[i] = itemsOrdered[j];
				}
				flag = true;
			}
			if (flag) {
				qtyOrdered--;
				nbOrders--;
				break;
			}
		}

	}
	public float totalCost() {
		float sum = 0;
		for (int i = 0; i < qtyOrdered; i++) {
			sum += itemsOrdered[i].getCost();
		}
		return sum;
	}
	public void showOrder() {
		System.out.println("----------------Order----------------");
        this.dateOrdered.print();
        for (int i = 0; i < nbOrders; i++) {
            System.out.println(i + 1 + ". " + itemsOrdered[i].getTitle() + " - " + itemsOrdered[i].getCost());
        }
        System.out.println("Total cost: " + totalCost());
        System.out.println("**************************************");
	}
	
	public DigitalVideoDisc getLuckyItem() {
		DigitalVideoDisc luckyDisk = new DigitalVideoDisc(" ");
		int min = 0;
		int max = this.qtyOrdered - 1;
		int range = max - min + 1;
		int random = (int)(Math.random() * range) + min;
		for(int i = 0; i < qtyOrdered; i++) {
			if(i == random) {
				luckyDisk = itemsOrdered[i];
				itemsOrdered[i].setCost(0);
				break;
			}
		}
		return luckyDisk;
	}
}

